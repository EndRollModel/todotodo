name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release:
    name: build and release electron app
    environment: prod
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 20

      - name: Download External Icon
        run: |
          mkdir -p build
          curl -o build/icon.png "${{ secrets.EXTERNAL_ICON_URL }}"

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: npm run dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List directories in build/win
        if: matrix.os == 'windows-latest'
        run: |
          dir build\win /s
          
      - name: Cleanup Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "build/win/*/locales"
          npx rimraf "build/win/*/resources"
          npx rimraf "build/win/*.ico"
          npx rimraf "build/win/*.js"
          npx rimraf "build/win/*.dll"
          npx rimraf "build/win/*.pdb"
          npx rimraf "build/win/*.log"
          npx rimraf "build/win/*.txt"
          npx rimraf "build/win/*.pak"
          npx rimraf "build/win/*.dat"
          npx rimraf "build/win/*.html"
          npx rimraf "build/win/*.bin"
          npx rimraf "build/win/*.json"
          npx rimraf "build/win/*.yam"
          npx rimraf "build/win/*.yaml"

      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: build

      - name: release
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "build/win/*.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
